{"version":3,"file":"static/js/617.a08effeb.chunk.js","mappings":"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","sources":["components/auth/SignUp.js"],"sourcesContent":["import React, { useState, useContext } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { createUserWithEmailAndPassword } from 'firebase/auth';\r\nimport { auth, firestore } from '../../Firebase';\r\nimport { AuthContext } from './UserContext';\r\nimport { collection, doc, setDoc } from 'firebase/firestore'; // Import Firestore methods\r\nimport { Button } from '../GlobalStyles';\r\n\r\nconst SignUp = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [signInError, setSignInError] = useState('');\r\n\r\n  const navigate = useNavigate();\r\n  const { setUser } = useContext(AuthContext);\r\n\r\n  const handleSignUp = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const userCredential = await createUserWithEmailAndPassword(auth, email, password);\r\n      setUser(userCredential.user); // Set the user in the context\r\n      navigate('/'); // Navigate to the dashboard or home page after sign up\r\n    \r\n      // Check for existing local storage data\r\n      const workoutsData = localStorage.getItem('workouts');\r\n      const exerciseOptionsData = localStorage.getItem('exerciseOptions');\r\n      if (workoutsData || exerciseOptionsData) {\r\n        const userData = {\r\n          workouts: workoutsData ? JSON.parse(workoutsData) : null,\r\n          exerciseOptions: exerciseOptionsData ? JSON.parse(exerciseOptionsData) : null,\r\n        };\r\n        \r\n        console.log(\"Attempting to write to Firestore: \", userData); // Make sure this line logs\r\n        \r\n        if(userData) {\r\n          console.log(\"User data from localStorage: \", userData);\r\n          // Migrate local data to user's account in Firestore\r\n          try {\r\n            await setDoc(doc(firestore, 'users', userCredential.user.uid), userData);\r\n            console.log(\"Data written to Firestore\"); // Check if this gets logged\r\n          } catch (error) {\r\n            console.error(\"Error writing to Firestore: \", error);\r\n          } \r\n        // Clear local storage\r\n        // localStorage.removeItem('workouts'); // eventually uncomment these?\r\n        // localStorage.removeItem('exerciseOptions');\r\n        } else {\r\n          console.log(\"No user data found in localStorage\")\r\n        }\r\n      }\r\n\r\n    } catch (error) {\r\n      console.error(\"Sign Up error\", error);\r\n\r\n            // Custom error message for the user\r\n      let errorMessage = '';\r\n      if (error.code === 'auth/invalid-email') {\r\n        errorMessage = 'Invalid email format.';\r\n      } else if (error.code === 'auth/email-already-in-use') {\r\n        errorMessage = 'This account is already in use.';\r\n      } else if (error.code === 'auth/invalid-login-credentials' || error.code === 'auth/user-not-found' || error.code === 'auth/wrong-password') {\r\n        errorMessage = 'Incorrect email or password.';\r\n      } else {\r\n        errorMessage = 'An error occurred during login. Please try again.';\r\n      }\r\n\r\n      setSignInError(errorMessage); // Set the custom error message\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Sign Up</h1>\r\n      <form className='user-form' onSubmit={handleSignUp}>\r\n      <label htmlFor=\"new-email\">Email</label>\r\n        <input \r\n          id=\"new-email\"\r\n          type=\"email\" \r\n          name='new-email'\r\n          autoComplete='new-email'\r\n          value={email} \r\n          onChange={(e) => setEmail(e.target.value)} \r\n          placeholder=\"Email\" \r\n        />\r\n        <label htmlFor=\"new-password\">Password</label>\r\n        <input \r\n          id=\"new-password\"\r\n          type=\"password\"\r\n          name='new-password'\r\n          autoComplete='new-password'  \r\n          value={password} \r\n          onChange={(e) => setPassword(e.target.value)} \r\n          placeholder=\"Password\" \r\n        />\r\n        <Button type=\"submit\">Sign Up</Button>\r\n        {signInError && <p style={{ color: 'grey' }}>{signInError}</p>} {/* Display the error message */}\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\n\r\nexport default SignUp;\r\n"],"names":["_useState","useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","password","setPassword","_useState5","_useState6","signInError","setSignInError","navigate","useNavigate","setUser","useContext","AuthContext","handleSignUp","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","e","userCredential","workoutsData","exerciseOptionsData","userData","errorMessage","wrap","_context","prev","next","preventDefault","createUserWithEmailAndPassword","auth","sent","user","localStorage","getItem","workouts","JSON","parse","exerciseOptions","console","log","setDoc","doc","firestore","uid","t0","error","t1","code","stop","_x","apply","arguments","_jsxs","children","_jsx","className","onSubmit","htmlFor","id","type","name","autoComplete","value","onChange","target","placeholder","Button","style","color"],"sourceRoot":""}