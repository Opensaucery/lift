{"version":3,"file":"static/js/345.8881c35b.chunk.js","mappings":"oMAqBMA,GAAMC,EAAAA,EAAAA,IAXW,CACrBC,OAAQ,0CACRC,WAAY,iCACZC,UAAW,iBACXC,cAAe,6BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAMXC,IADYC,EAAAA,EAAAA,IAAaV,IAClBW,EAAAA,EAAAA,IAAQX,IAGRY,GAAYC,EAAAA,EAAAA,IAAab,E,0HC0CtC,UA7Dc,WACZ,IAAAc,GAA0BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/BI,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GACtBI,GAAgCL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAArCE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GACtBG,GAAWC,EAAAA,EAAAA,MACTC,GAAYC,EAAAA,EAAAA,YAAWC,EAAAA,IAAvBF,QACRG,GAAoCd,EAAAA,EAAAA,UAAS,IAAGe,GAAAb,EAAAA,EAAAA,GAAAY,EAAA,GAAzCE,EAAUD,EAAA,GAAEE,EAAaF,EAAA,GAG1BG,EAAW,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAJ,EAAAA,EAAAA,KAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,GAEaC,EAAAA,EAAAA,IAA2BpC,EAAAA,EAAMS,EAAOI,GAAU,KAAD,EAAxEiB,EAAcG,EAAAI,KACpBpB,EAAQa,EAAeQ,MAEvBvB,EAAS,KACTQ,EAAc,IAAKU,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAM,GAAAN,EAAA,SAEnBO,QAAQC,MAAM,cAAaR,EAAAM,IAGzBR,EAAe,GAEjBA,EADiB,uBAAfE,EAAAM,GAAMG,KACO,wBACS,uBAAfT,EAAAM,GAAMG,KACA,uCACS,mCAAfT,EAAAM,GAAMG,MAA4D,wBAAfT,EAAAM,GAAMG,MAAiD,wBAAfT,EAAAM,GAAMG,KAC3F,+BAEA,oDAGjBnB,EAAcQ,GAAe,yBAAAE,EAAAU,OAAA,GAAAd,EAAA,kBAE9B,kBAxBgB,OAAAJ,EAAAmB,MAAA,KAAAC,UAAA,KA0BjB,OACEC,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,WACJC,EAAAA,EAAAA,KAAA,SAAOC,QAAQ,QAAOF,SAAC,WACvBC,EAAAA,EAAAA,KAAA,SACEE,GAAG,QACHC,KAAK,QACLC,KAAK,QACLC,MAAO5C,EACP6C,SAAU,SAACC,GAAC,OAAK7C,EAAS6C,EAAEC,OAAOH,MAAM,KAG3CL,EAAAA,EAAAA,KAAA,SAAOC,QAAQ,WAAUF,SAAC,cAC1BC,EAAAA,EAAAA,KAAA,SACEE,GAAG,WACHC,KAAK,WACLC,KAAK,WACLC,MAAOxC,EACPyC,SAAU,SAACC,GAAC,OAAKzC,EAAYyC,EAAEC,OAAOH,MAAM,KAG9CL,EAAAA,EAAAA,KAAA,UAAQS,QAASjC,EAAYuB,SAAC,UAC7BzB,IAAc0B,EAAAA,EAAAA,KAAA,KAAGU,MAAO,CAAEC,MAAO,QAASZ,SAAEzB,IAAgB,MAGnE,C","sources":["Firebase.js","components/auth/Login.js"],"sourcesContent":["// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getAnalytics } from \"firebase/analytics\";\r\nimport { getAuth } from \"firebase/auth\"; // Import for Firebase Authentication\r\nimport { getFirestore } from \"firebase/firestore\";\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyAHRhokxKTBDdkP7dP-NScIMWTWju7QL04\",\r\n  authDomain: \"lifttrackerlog.firebaseapp.com\",\r\n  projectId: \"lifttrackerlog\",\r\n  storageBucket: \"lifttrackerlog.appspot.com\",\r\n  messagingSenderId: \"226013600119\",\r\n  appId: \"1:226013600119:web:d02ac2fa2ef168c0b1e972\",\r\n  measurementId: \"G-2XD32MGXTL\"\r\n};\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\nconst analytics = getAnalytics(app);    \r\nconst auth = getAuth(app); // Initialize Firebase Authentication\r\n\r\nexport { auth }; // Export the auth object for use in your app\r\nexport const firestore = getFirestore(app); // Initialize and export Firestore","import React, { useContext, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom'; // Import from react-router-dom v6\r\nimport { signInWithEmailAndPassword } from 'firebase/auth';\r\nimport { auth } from '../../Firebase';\r\nimport { AuthContext } from './UserContext';\r\n\r\n\r\nconst Login = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const navigate = useNavigate();\r\n  const { setUser } = useContext(AuthContext);\r\n  const [loginError, setLoginError] = useState('');\r\n\r\n\r\n  const handleLogin = async () => {\r\n    try {\r\n      const userCredential = await signInWithEmailAndPassword(auth, email, password);\r\n      setUser(userCredential.user); // Set the user in the context\r\n      // Redirect to home page or dashboard\r\n      navigate('/'); // Adjust the route as necessary\r\n      setLoginError(''); // Clear any previous errors\r\n    } catch (error) {\r\n      console.error(\"Login error\", error);\r\n      \r\n    // Custom error message for the user\r\n    let errorMessage = '';\r\n    if (error.code === 'auth/invalid-email') {\r\n      errorMessage = 'Invalid email format.';\r\n    } else if (error.code === 'auth/user-disabled') {\r\n      errorMessage = 'This user account has been disabled.';\r\n    } else if (error.code === 'auth/invalid-login-credentials' || error.code === 'auth/user-not-found' || error.code === 'auth/wrong-password') {\r\n      errorMessage = 'Incorrect email or password.';\r\n    } else {\r\n      errorMessage = 'An error occurred during login. Please try again.';\r\n    }\r\n\r\n    setLoginError(errorMessage); // Set the custom error message\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Login</h1>\r\n      <label htmlFor=\"email\">Email</label>\r\n      <input \r\n        id=\"email\"\r\n        type=\"email\" \r\n        name='email'\r\n        value={email} \r\n        onChange={(e) => setEmail(e.target.value)} \r\n        // placeholder=\"Email\" \r\n      />\r\n      <label htmlFor=\"password\">Password</label>\r\n      <input \r\n        id=\"password\"\r\n        type=\"password\"\r\n        name='password' \r\n        value={password} \r\n        onChange={(e) => setPassword(e.target.value)} \r\n        // placeholder=\"Password\" \r\n      />\r\n      <button onClick={handleLogin}>Login</button>\r\n      {loginError && <p style={{ color: 'grey' }}>{loginError}</p>} {/* Display the error message */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"names":["app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","getAnalytics","getAuth","firestore","getFirestore","_useState","useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","password","setPassword","navigate","useNavigate","setUser","useContext","AuthContext","_useState5","_useState6","loginError","setLoginError","handleLogin","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","userCredential","errorMessage","wrap","_context","prev","next","signInWithEmailAndPassword","sent","user","t0","console","error","code","stop","apply","arguments","_jsxs","children","_jsx","htmlFor","id","type","name","value","onChange","e","target","onClick","style","color"],"sourceRoot":""}