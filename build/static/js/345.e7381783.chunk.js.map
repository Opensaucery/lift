{"version":3,"file":"static/js/345.e7381783.chunk.js","mappings":"4LAqEA,UA9Dc,WACZ,IAAAA,GAA0BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/BI,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GACtBI,GAAgCL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAArCE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GACtBG,GAAWC,EAAAA,EAAAA,MACTC,GAAYC,EAAAA,EAAAA,YAAWC,EAAAA,IAAvBF,QACRG,GAAoCd,EAAAA,EAAAA,UAAS,IAAGe,GAAAb,EAAAA,EAAAA,GAAAY,EAAA,GAAzCE,EAAUD,EAAA,GAAEE,EAAaF,EAAA,GAG1BG,EAAW,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAJ,EAAAA,EAAAA,KAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,GAEaC,EAAAA,EAAAA,IAA2BC,EAAAA,EAAM5B,EAAOI,GAAU,KAAD,EAAxEiB,EAAcG,EAAAK,KACpBrB,EAAQa,EAAeS,MAGvBxB,EAAS,KACTQ,EAAc,IAAKU,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAO,GAAAP,EAAA,SAEnBQ,QAAQC,MAAM,cAAaT,EAAAO,IAGzBT,EAAe,GAEjBA,EADiB,uBAAfE,EAAAO,GAAMG,KACO,wBACS,uBAAfV,EAAAO,GAAMG,KACA,uCACS,mCAAfV,EAAAO,GAAMG,MAA4D,wBAAfV,EAAAO,GAAMG,MAAiD,wBAAfV,EAAAO,GAAMG,KAC3F,+BAEA,oDAGjBpB,EAAcQ,GAAe,yBAAAE,EAAAW,OAAA,GAAAf,EAAA,kBAE9B,kBAzBgB,OAAAJ,EAAAoB,MAAA,KAAAC,UAAA,KA2BjB,OACEC,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,WACJC,EAAAA,EAAAA,KAAA,SAAOC,QAAQ,QAAOF,SAAC,WACvBC,EAAAA,EAAAA,KAAA,SACEE,GAAG,QACHC,KAAK,QACLC,KAAK,QACLC,MAAO7C,EACP8C,SAAU,SAACC,GAAC,OAAK9C,EAAS8C,EAAEC,OAAOH,MAAM,KAG3CL,EAAAA,EAAAA,KAAA,SAAOC,QAAQ,WAAUF,SAAC,cAC1BC,EAAAA,EAAAA,KAAA,SACEE,GAAG,WACHC,KAAK,WACLC,KAAK,WACLC,MAAOzC,EACP0C,SAAU,SAACC,GAAC,OAAK1C,EAAY0C,EAAEC,OAAOH,MAAM,KAG9CL,EAAAA,EAAAA,KAAA,UAAQS,QAASlC,EAAYwB,SAAC,UAC7B1B,IAAc2B,EAAAA,EAAAA,KAAA,KAAGU,MAAO,CAAEC,MAAO,QAASZ,SAAE1B,IAAgB,MAGnE,C","sources":["components/auth/Login.js"],"sourcesContent":["import React, { useContext, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom'; // Import from react-router-dom v6\r\nimport { signInWithEmailAndPassword } from 'firebase/auth';\r\nimport { auth } from '../../Firebase';\r\nimport { AuthContext } from './UserContext';\r\n\r\n\r\nconst Login = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const navigate = useNavigate();\r\n  const { setUser } = useContext(AuthContext);\r\n  const [loginError, setLoginError] = useState('');\r\n\r\n\r\n  const handleLogin = async () => {\r\n    try {\r\n      const userCredential = await signInWithEmailAndPassword(auth, email, password);\r\n      setUser(userCredential.user); // Set the user in the context\r\n      // Redirect to home page or dashboard\r\n      \r\n      navigate('/'); // Adjust the route as necessary\r\n      setLoginError(''); // Clear any previous errors\r\n    } catch (error) {\r\n      console.error(\"Login error\", error);\r\n      \r\n    // Custom error message for the user\r\n    let errorMessage = '';\r\n    if (error.code === 'auth/invalid-email') {\r\n      errorMessage = 'Invalid email format.';\r\n    } else if (error.code === 'auth/user-disabled') {\r\n      errorMessage = 'This user account has been disabled.';\r\n    } else if (error.code === 'auth/invalid-login-credentials' || error.code === 'auth/user-not-found' || error.code === 'auth/wrong-password') {\r\n      errorMessage = 'Incorrect email or password.';\r\n    } else {\r\n      errorMessage = 'An error occurred during login. Please try again.';\r\n    }\r\n\r\n    setLoginError(errorMessage); // Set the custom error message\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Login</h1>\r\n      <label htmlFor=\"email\">Email</label>\r\n      <input \r\n        id=\"email\"\r\n        type=\"email\" \r\n        name='email'\r\n        value={email} \r\n        onChange={(e) => setEmail(e.target.value)} \r\n        // placeholder=\"Email\" \r\n      />\r\n      <label htmlFor=\"password\">Password</label>\r\n      <input \r\n        id=\"password\"\r\n        type=\"password\"\r\n        name='password' \r\n        value={password} \r\n        onChange={(e) => setPassword(e.target.value)} \r\n        // placeholder=\"Password\" \r\n      />\r\n      <button onClick={handleLogin}>Login</button>\r\n      {loginError && <p style={{ color: 'grey' }}>{loginError}</p>} {/* Display the error message */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"names":["_useState","useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","password","setPassword","navigate","useNavigate","setUser","useContext","AuthContext","_useState5","_useState6","loginError","setLoginError","handleLogin","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","userCredential","errorMessage","wrap","_context","prev","next","signInWithEmailAndPassword","auth","sent","user","t0","console","error","code","stop","apply","arguments","_jsxs","children","_jsx","htmlFor","id","type","name","value","onChange","e","target","onClick","style","color"],"sourceRoot":""}